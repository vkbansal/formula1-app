---
import MainLayout from 'layouts/main.astro';
import Breadcrumbs from 'components/breadcrumbs.astro';
import seasonsQuery from 'queries/seasons'
import racesDataQuery from 'queries/racesData'


export async function getStaticPaths() {
  const seasons = await seasonsQuery()

  return seasons.map((year) => ({ params: { year: year.toString() }}))
}

const { year } = Astro.params as { year: string }
const data = await racesDataQuery(year.toString())

---
<MainLayout title={`Races | ${year} Season`}>
  <div>
    <Breadcrumbs links={[
      { text: 'Seasons', href: '/seasons' },
      { text: `${year}`, href: `/seasons/${year}` },
      { text: 'Races', href: '' },
    ]} />
    <h1>Races - {year} Season</h1>
    <table class="table">
      <thead>
        <tr>
          <th>Round</th>
          <th>Name</th>
          <th>Held on</th>
          <th>Winner</th>
          <th>Circuit</th>
        </tr>
      </thead>
      <tbody>
      {data.races.map((race: any) => (
        <tr>
          <td>{race.round}</td>
          <td>
            <a href="/seasons/{{season}}/races/race-{{race.round | padLeft(2, '0')}}/">{race.name}</a>
          </td>
          <td>{race.date}</td>
          <td>
            {race.winner_driver ? (
              <Fragment>
                <span data-nationality={race.winner_driver.nationality}>
                  {race.winner_driver.forename} {race.winner_driver.surname}
                </span>
                <span>({race.winner_constructor.name})</span>
                </Fragment>
            ) : null}
          </td>
          <td>{race.circuit.name}, {race.circuit.location}, {race.circuit.country}</td>
        </tr>
      ))}
      </tbody>
    </table>
  </div>
</MainLayout>
