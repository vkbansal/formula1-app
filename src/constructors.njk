---
title: Constructors
pageId: 'constructors'
alpinejs: true
tableColumns:
  - id: name
    label: Name
  - id: total_races
    label: Total Races
  - id: race_wins
    label: Race Wins
  - id: podiums
    label: Podiums
  - id: win_pct
    label: Win%
---
{% extends './_layouts/main.njk' %}

{% block breadcrumbs %}
<span>Constructors</span>
{% endblock %}

{% block content %}
<div class="constructors-page">
  {% set columns = ['name', 'wins'] %}
  <table class="table" x-data="constructorsData">
    <thead>
      <tr>
        <th @click="sort('name')" :data-sort="sortCol === 'name' ? (sortAsc ? 'asc' : 'desc') : ''">Constructor</th>
        <th @click="sort('nationality')" :data-sort="sortCol === 'nationality' ? (sortAsc ? 'asc' : 'desc') : ''">Nationality</th>
        <th @click="sort('total_races')" :data-sort="sortCol === 'total_races' ? (sortAsc ? 'asc' : 'desc') : ''">Total Races</th>
        <th @click="sort('race_wins')" :data-sort="sortCol === 'race_wins' ? (sortAsc ? 'asc' : 'desc') : ''">Race Wins</th>
        <th @click="sort('podiums')" :data-sort="sortCol === 'podiums' ? (sortAsc ? 'asc' : 'desc') : ''">Podiums</th>
        <th @click="sort('win_pct')" :data-sort="sortCol === 'win_pct' ? (sortAsc ? 'asc' : 'desc') : ''">Win%</th>
      </tr>
    </thead>
    <tbody>
      <template x-for="row in data">
        <tr>
          <td x-text="row.name"></td>
          <td>
            <span class="nationality" :class="row.nationality.replace(/\s/g, '_').toLowerCase()"></span>
            <span x-text="row.nationality"></span>
          </td>
          <td x-text="row.total_races"></td>
          <td x-text="row.race_wins"></td>
          <td x-text="row.podiums"></td>
          <td x-text="row.win_pct.toFixed(2) + '%'"></td>
        <tr>
      </template>
    </tbody>
  </table>
</div>
{% endblock %}

{% block beforescripts %}
<script>
   document.addEventListener('alpine:init', () => {
    Alpine.data('constructorsData', () => ({
      data:  {{constructors | dump | safe}},
      sortCol: null,
      sortAsc: false,
      sort(col) {
        if (this.sortCol === col) {
          this.sortAsc = !this.sortAsc;
        }
        this.sortCol = col;
        this.data.sort((a, b) => {
          if (a[col] < b[col]) {
            return this.sortAsc ? 1 : -1
          }

          if (a[col] > b[col]) {
            return this.sortAsc ? -1 : 1
          }

          return 0
        })
      }
    }))
  })
</script>
{% endblock %}
